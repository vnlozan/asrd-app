services:
  postgres:
    networks:
      - localnetwork
    image: 'postgres:14.0'
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  mongo:
    networks:
      - localnetwork
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db

  mailhog:
    networks:
      - localnetwork
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"

  logger:
    build:
      context: ./../logger
      dockerfile: ./../logger/Dockerfile
    networks:
      - localnetwork
    environment:
      PORT: 8080
      RPC_PORT: 5001
      GRPC_PORT: 50001
      MONGODB_URL: mongodb://mongo:27017
    restart: always
    ports:
      - "8082:8080"
    deploy:
      mode: replicated
      replicas: 1

  mailer:
    build:
      context: ./../mailer
      dockerfile: ./../mailer/Dockerfile
    networks:
      - localnetwork
    restart: always
    ports:
      - "8083:8080"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      PORT: 8080
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "John Smith"
      FROM_ADDRESS: john.smith@example.com

  auth:
    build:
      context: ./../auth
      dockerfile: ./../auth/Dockerfile
    networks:
      - localnetwork
    restart: always
    environment:
      PORT: 8080
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"
    ports:
      - "8084:8080"
    deploy:
      mode: replicated
      replicas: 1

  broker:
    build:
      context: ./../broker
      dockerfile: ./../broker/Dockerfile
    restart: always
    environment:
      PORT: 8080
    networks:
      - localnetwork
    ports:
      - "8080:8080"
    deploy:
      mode: replicated
      replicas: 1

  fe:
    build:
      context: ./../fe
      dockerfile: ./../fe/Dockerfile
    restart: always
    environment:
      PORT: 8080
    networks:
      - localnetwork
    ports:
      - "8086:8080"
    deploy:
      mode: replicated
      replicas: 1

networks:
  localnetwork:
    driver: bridge